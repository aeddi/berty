platform :ios, '9.0'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

def add_flipper_pods!(versions = {})
  versions['Flipper'] ||= '~> 0.33.1'
  versions['DoubleConversion'] ||= '1.1.7'
  versions['Flipper-Folly'] ||= '~> 2.1'
  versions['Flipper-Glog'] ||= '0.3.6'
  versions['Flipper-PeerTalk'] ||= '~> 0.0.4'
  versions['Flipper-RSocket'] ||= '~> 1.0'
  pod 'FlipperKit', versions['Flipper'], :configuration => 'Debug'
  pod 'FlipperKit/FlipperKitLayoutPlugin', versions['Flipper'], :configuration => 'Debug'
  pod 'FlipperKit/SKIOSNetworkPlugin', versions['Flipper'], :configuration => 'Debug'
  pod 'FlipperKit/FlipperKitUserDefaultsPlugin', versions['Flipper'], :configuration => 'Debug'
  pod 'FlipperKit/FlipperKitReactPlugin', versions['Flipper'], :configuration => 'Debug'
  # List all transitive dependencies for FlipperKit pods
  # to avoid them being linked in Release builds
  pod 'Flipper', versions['Flipper'], :configuration => 'Debug'
  pod 'Flipper-DoubleConversion', versions['DoubleConversion'], :configuration => 'Debug'
  pod 'Flipper-Folly', versions['Flipper-Folly'], :configuration => 'Debug'
  pod 'Flipper-Glog', versions['Flipper-Glog'], :configuration => 'Debug'
  pod 'Flipper-PeerTalk', versions['Flipper-PeerTalk'], :configuration => 'Debug'
  pod 'Flipper-RSocket', versions['Flipper-RSocket'], :configuration => 'Debug'
  pod 'FlipperKit/Core', versions['Flipper'], :configuration => 'Debug'
  pod 'FlipperKit/CppBridge', versions['Flipper'], :configuration => 'Debug'
  pod 'FlipperKit/FBCxxFollyDynamicConvert', versions['Flipper'], :configuration => 'Debug'
  pod 'FlipperKit/FBDefines', versions['Flipper'], :configuration => 'Debug'
  pod 'FlipperKit/FKPortForwarding', versions['Flipper'], :configuration => 'Debug'
  pod 'FlipperKit/FlipperKitHighlightOverlay', versions['Flipper'], :configuration => 'Debug'
  pod 'FlipperKit/FlipperKitLayoutTextSearchable', versions['Flipper'], :configuration => 'Debug'
  pod 'FlipperKit/FlipperKitNetworkPlugin', versions['Flipper'], :configuration => 'Debug'
end
# Post Install processing for Flipper
def flipper_post_install(installer)
  installer.pods_project.targets.each do |target|
    if target.name == 'YogaKit'
      target.build_configurations.each do |config|
        config.build_settings['SWIFT_VERSION'] = '4.1'
      end
    end
  end
end

target 'Berty' do
  # Pods for Berty
  pod 'FBLazyVector', :path => "../node_modules/react-native/Libraries/FBLazyVector"
  pod 'FBReactNativeSpec', :path => "../node_modules/react-native/Libraries/FBReactNativeSpec"
  pod 'RCTRequired', :path => "../node_modules/react-native/Libraries/RCTRequired"
  pod 'RCTTypeSafety', :path => "../node_modules/react-native/Libraries/TypeSafety"
  pod 'React', :path => '../node_modules/react-native/'
  pod 'React-Core', :path => '../node_modules/react-native/'
  pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules'
  pod 'React-Core/DevSupport', :path => '../node_modules/react-native/'
  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
  pod 'React-Core/RCTWebSocket', :path => '../node_modules/react-native/'

  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
  pod 'ReactCommon/callinvoker', :path => "../node_modules/react-native/ReactCommon"
  pod 'ReactCommon/turbomodule/core', :path => "../node_modules/react-native/ReactCommon"
  pod 'Yoga', :path => '../node_modules/react-native/ReactCommon/yoga', :modular_headers => true

  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'

  # needed for react-native-qrcode-scanner
  pod 'Permission-Camera', :path => "../../../node_modules/react-native-permissions/ios/Camera.podspec"

  use_native_modules!

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  add_flipper_pods!
  post_install do |installer|
    flipper_post_install(installer)

    # Removes pods incompatible with Catalyst (camera pods)
    unsupported_header_paths = [
      '"${PODS_ROOT}/Headers/Public/AFNetworking"',
      '"${PODS_ROOT}/Headers/Public/CocoaLibEvent"',
      '"${PODS_ROOT}/Headers/Public/OpenSSL-Universal"',
      '"${PODS_ROOT}/Headers/Public/react-native-camera"',
      '"${PODS_ROOT}/Headers/Public/react-native-example"'
    ]
    unsupported_header_paths_debug = [
      '"${PODS_ROOT}/Headers/Public/Flipper"',
      '"${PODS_ROOT}/Headers/Public/Flipper-DoubleConversion"',
      '"${PODS_ROOT}/Headers/Public/Flipper-Folly"',
      '"${PODS_ROOT}/Headers/Public/Flipper-Glog"',
      '"${PODS_ROOT}/Headers/Public/Flipper-PeerTalk"',
      '"${PODS_ROOT}/Headers/Public/Flipper-RSocket"',
      '"${PODS_ROOT}/Headers/Public/FlipperKit"'
    ]
    unsupported_lib_paths = [
      '"${PODS_CONFIGURATION_BUILD_DIR}/AFNetworking"',
      '"${PODS_CONFIGURATION_BUILD_DIR}/react-native-camera"',
      '"${PODS_CONFIGURATION_BUILD_DIR}/react-native-example"',
      '"${PODS_ROOT}/CocoaLibEvent/lib"',
      '"${PODS_ROOT}/OpenSSL-Universal/ios/lib"'
    ]
    unsupported_lib_paths_debug = [
      '"${PODS_CONFIGURATION_BUILD_DIR}/Flipper"',
      '"${PODS_CONFIGURATION_BUILD_DIR}/Flipper-DoubleConversion"',
      '"${PODS_CONFIGURATION_BUILD_DIR}/Flipper-Folly"',
      '"${PODS_CONFIGURATION_BUILD_DIR}/Flipper-Glog"',
      '"${PODS_CONFIGURATION_BUILD_DIR}/Flipper-PeerTalk"',
      '"${PODS_CONFIGURATION_BUILD_DIR}/Flipper-RSocket"',
      '"${PODS_CONFIGURATION_BUILD_DIR}/FlipperKit"',
    ]
    unsupported_ldflags = [
      '-l"AFNetworking"',
      '-l"crypto"',
      '-l"event"',
      '-l"event_core"',
      '-l"event_extra"',
      '-l"event_pthreads"',
      '-l"ssl"',
      '-l"react-native-camera"',
      '-l"react-native-example"'
    ]
    unsupported_ldflags_debug = [
      '-l"Flipper"',
      '-l"Flipper-DoubleConversion"',
      '-l"Flipper-Folly"',
      '-l"Flipper-Glog"',
      '-l"Flipper-PeerTalk"',
      '-l"Flipper-RSocket"',
      '-l"FlipperKit"',
    ]
    unsupported_rel = unsupported_header_paths + unsupported_lib_paths + unsupported_ldflags
    unsupported_debug = unsupported_header_paths_debug + unsupported_lib_paths_debug + unsupported_ldflags_debug
    installer.pods_project.targets.each do |target|
      if target.name.start_with?("Pods")
        puts "Updating #{target.name} to exclude Catalyst incompatible pods"
        target.build_configurations.each do |config|
          debug = config.name == 'Debug'
          xcconfig_path = config.base_configuration_reference.real_path
          xcconfig = File.read(xcconfig_path)
          (unsupported_rel + (debug ? unsupported_debug : [])).each do |unsupported|
            xcconfig.sub!(unsupported, '')
          end
          new_xcconfig = xcconfig
          new_xcconfig += "HEADER_SEARCH_PATHS[sdk=iphone*] = $(inherited) #{(unsupported_header_paths + (debug ? unsupported_header_paths_debug : [])).join(' ')}\n"
          new_xcconfig += "LIBRARY_SEARCH_PATHS[sdk=iphone*] = $(inherited) #{(unsupported_lib_paths + (debug ? unsupported_lib_paths_debug : [])).join(' ')}\n"
          new_xcconfig += "OTHER_LDFLAGS[sdk=iphone*] = $(inherited) #{(unsupported_ldflags + (debug ? unsupported_ldflags_debug : [])).join(' ')}\n"
          File.open(xcconfig_path, "w") { |file| file << new_xcconfig }
        end
      end
    end
  end
end
